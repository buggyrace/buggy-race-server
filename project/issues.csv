0-GET Get the source code,"The source code for the app you're going to be developing already exits: you\nneed to get your own copy of it to a place where you can edit it and run it.\n\nGet the source code, ideally by using the VSCode workspace file we have prepared for you. It will clone your Github repository onto your personal directory in the CS Department's *teaching server*.\n\nA requirement for the below steps is to install the main IDE (**I**ntegrated **D**evelopment **E**nvironment) we will use for this module: [VSCode](https://code.visualstudio.com/). This is a modern, powerful and thorough IDE that will be a valuable asset in your toolbox! This is what needs to happen:\n\n* Go to the [buggy race server]({{ site.server_url }}) and login.\n* Link your account to your Github personal account.\n* `Fork` the template for the buggy race editor from [our Github repository]({{ site.editor_url }}) to yours.\n* Download your *VSCode workspace configuration file* by clicking in the corresponding button. Store it somewhere safe.\n* Open it with VSCode. It might complain that some plugins and packages are missing. **Do not despair**, VSCode will kindly offer to install everything that is necessary.\n* You will be asked to input your college password a couple of times. Just type it every time it is requested. Wait for a bit.\n\n\nAfter VSCodes finishes connecting you to our *teaching server*, it will be time to get the code from Github, to your personal home directory in the server. Do not worry, we have also automated this for you. To get a copy of your buggy race editor repo to the server, do:\n\n* go to the *terminal* tab in VSCode, located in the top panel. Then, click on *run task* and a list of tasks will appear. Choose the one starting with `git clone https://github.com/` and wait.\n* The previous step *cloned* your **remote Github repository** to a **local version** which, in this case, lives in the teaching server!\n* If you click on *Open file* and you look in your *home directory*, you should find a folder called **CS1999-buggy-race-editor**.\n* Open that folder and compare its contents against those in the remote repo you previously forked, they are the same!\n* You might get asked for your college password a couple of times in the above step, this is normal.\n* If the *CS1999-buggy-race-editor* **is not** in your home directory, then probably something went wrong. Try to reproduce the above steps once more.\n\n\n<!-- commented out in iteration 2021-2022 as students will be getting the repos automatically via VSCode's tasks -->\n<!-- Get the source code — ideally as a Git repo — onto the machine you'll be -->\n<!-- working on. -->\n\n[0-GET full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-0-get)"
0-RUN Get app running and view it in a browser,"You need to be able to deploy the webserver, contained in `app.py`, so you can view it in your web browser.\n\nRun the python code so it listens on a port somewhere you can point your browser at.\n\n[0-RUN full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-0-run)"
0-CHANGE Make a change to a template and see it appear,"You must demonstrate that you can change a template so the change appears in\nthe browser.\n\nEdit some text in a template (e.g., `templates/index.html`).\nConfirm it changes when you hit the corresponding page in the browser.\n\n[0-CHANGE full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-0-change)"
1-TEMPLATE Add a new template to the app,Some useful information — such as the cost of buggy components — is only\navailable on the race server. You can't access this information when you're\nusing your buggy editor offline.\n\nAdd a new page called `/info` that displays the cost information.\nNow you (or any user of your buggy editor) can investigate buggy costs without\ngoing to the race server.\n\n[1-TEMPLATE full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-1-template)
1-ADD Add more data to the form,The only data being collected by the form is the number of wheels.\n\nAdd more items to the form (and save it in the database).\n\n[1-ADD full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-1-add)
1-VALID Add basic data validation,"If you enter ""banana"" for the number of wheels, you should get an error.\n\nAdd data validation: you app should check that the data input is the right kind\nof thing (an integer) and reject it with a warning.\n\n[1-VALID full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-1-valid)"
1-STYLE Style your editor just how you like it,Your editor looks identical to the basic one.\n\nMake it look beautiful and different from everybody else's.\n\n[1-STYLE full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-1-style)
2-EDIT Edit the record by loading its current values into the form,"In the basic app, the form is blank when you visit it so it always implies the\ndefault value.\n\nBefore you present the form, you should fill its values with the current\nsettings from the Buggy record in the database.\n\n[2-EDIT full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-2-edit)"
2-FORM Make the form better,The basic form isn't easy to use. Can you make it better?\n\nTry to lay out the form to be clear and easy to use.\n\n[2-FORM full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-2-form)
2-COST Calculate and save the game cost of the buggy,"The cost of the buggy (worked out using the game rules) affects whether it can\nbe entered in some races. Add the cost to the record.\n\nAdd a new integer column called `total_cost` to the `buggies` table, and store\nthe total cost there.\n\n[2-COST full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-2-cost)"
2-RULES Add validation according to the game rules,"There are some configuration options that are not allowed (for example,\nthe quantity of wheels must be even).\n\nAdd game rules to your validation.\n\n[2-RULES full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-2-rules)"
3-ENV Switch between dev and production environments,"Flask behaves differently when it is running in development (""dev"") and\nproduction environments, which you can switch using environment variables. Get\nthat working so you can do your coding in development mode, but work on your\nracing buggy in production mode.\n\nMake sure the configuration is correct and you're using the environment\nvariable `FLASK_ENV` correctly.\n\n[3-ENV full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-3-env)"
3-AUTOFILL Add auto-fill to the edit forms,"After you've made your some choices on your buggy form, there are still lots of\nitems to fill in. It would be good to auto-populate empty settings with values\nthat create a complete, viable buggy.\n\nAdd a button that automatically fills the other entries. Maybe these are just\nsensible default values. Or perhaps you can ask for a cost limit when the button\nis pressed, and try to add items so that the buggy's total cost is within that\nlimit.\n\n[3-AUTOFILL full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-3-autofill)"
3-MULTI Allow different buggies to be created,"The default app only lets you save **one buggy**. You should be able to save\ndifferent buggies so you can switch between them.\n\nModify the app to create a new buggy and subsequently update it, and to provide\na way to switch between the different buggies you've created.\n\n[3-MULTI full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-3-multi)"
3-DEL Allow buggies to be deleted,You have multiple buggies: you should be able to delete ones you don't want.\n\nAdd a `delete` route to remove a buggy.\n\n[3-DEL full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-3-del)
3-FLAG Display the pennant graphically,The user's choices for the colours and pattern of the buggy's pennant (flag) is\nvisual information but is probably displayed as text.\n\nShow a graphical representation of the pennant in the browser.\n\n[3-FLAG full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-3-flag)
3-TESTS Write some tests,You should be able to run automatic tests that confirm your app calculates the\ncost correctly... as well as other things too.\n\nYou probably know your app works because you've been running it (and playing\nwith it) as you go along. But you should write some _automated_ tests.\n\n[3-TESTS full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-3-tests)
4-USERS Add users (and sessions) so you know who is editing a buggy,"Anyone can access your app and edit a buggy: ultimately only the person who\ncreated it should be able to. Add a login mechanism so you can tell the\ndifference between users.\n\nAdd usernames to distinguish between users, and a mechanism for starting and\nending a session (such as logging in and logging out).\n\n[4-USERS full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-4-users)"
4-REGISTER Make a new user,Make it possible to create a new user to use when logging in with\n[user logins (4-USER)](#task-4-user).\n\nMake a registration (or sign-in) page with a form for creating new users.\n\n[4-REGISTER full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-4-register)
4-OWNER A buggy belongs to a user,Any user can edit any buggy. Only the buggy's creator should be able to edit\n(or delete) it.\n\nAssociate buggies with a specific user and only grant access to buggies to the\nlogged-in user.\n\n[4-OWNER full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-4-owner)
4-PASS Add password protection to the users,Anyone can login as any user they like... unless there is a password on user\naccounts.\n\nSet and store a password for each user.\n\n[4-PASS full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-4-pass)
5-VIZ Visual representation of the buggy,The buggies are just a bunch of numbers and settings!\n\nConstruct a visual representation of each buggy that shows its configuration.\n\n[5-VIZ full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-5-viz)
5-RESET Password reset,"A user who forgets their password can't log in.\n\nThere's no email address associated with a user, so to implement a reset\npassword option perhaps you'll need to add that to the user record, and find a\nway to send an email from within Python. Or use a one-use token system (see\nhints).\n\n[5-RESET full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-5-reset)"
5-RACELOG Store a history of race results for the buggies in your app,"You don't know how well different buggies did in their races, but you should\nbe able to see which ones have won more races, and how.\n\nStore and present a log of race results for each buggy.\n\n[5-RACELOG full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-5-racelog)"
5-ADMIN Add admin capabilities to superusers,"At least one user should be able to change other users (and admin, or superuser).\n\nUse something like the `is_admin` setting in the users table and add superuser\ncapability for manipulating buggies and users.\n\n[5-ADMIN full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-5-admin)"
5-API Use the server API for submitting the buggy data,Manually copying the JSON data from the editor to paste into the race server is\nclunky — use the buggy submission API instead.\n\nAsk for the API specification and implement an **upload to server** feature for\na selected buggy.\n\n[5-API full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-5-api)
6-FREE Add custom features to the editor,This task is a freestyle placeholder for other developments to the editor\nonce you've done all the others.\n\nImplement your own custom features.\n\n[6-FREE full details](https://rhul-cs-projects.github.io/CS1999-buggy-race-server/project/tasks/#task-6-free)
