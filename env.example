  # .env
  # make a copy of this (example) file and rename it to .env
  # if you want these settings to be applied to your local
  # development: Python's dotenv module notices a .env file
  # in the project root and applies it.

  # Environment variable overrides for local development

FLASK_APP=autoapp.py
FLASK_DEBUG=1
FLASK_ENV=development
DATABASE_URL=sqlite:////tmp/dev.db
GUNICORN_WORKERS=1
LOG_LEVEL=debug
SECRET_KEY=not-so-secret

  # In production, set to a higher number, like 31556926
SEND_FILE_MAX_AGE_DEFAULT=0

  # ----------------------------------------------------------#
  # buggy-racing specific settings foloow:                    #
  #   look inside buggy_race_server/settings.py               #
  #   to see this being consumed (and any that are missing)   #
  # ----------------------------------------------------------#

  # URL to the "buggy editor" code the students need
  #
BUGGY_EDITOR_GITHUB_URL=https://github.com/RHUL-CS-Projects/CS1999-buggy-race-editor
BUGGY_EDITOR_REPO_NAME=CS1999-buggy-race-editor
BUGGY_EDITOR_REPO_OWNER=RHUL-CS-Projects


  # Path and filename of the markdown file of issues relative to the
  # servers root path e.g. /buggy_race_server
BUGGY_EDITOR_ISSUES_FILE=../project/issues.csv


  # URL to the Piazza for Q&A discussion
  #
PIAZZA_URL=https://piazza.com/class/k9smsf18uit2rb


  # URL to the published docs
  # (e.g., the GitHub pages URL of the docs/ directory of this repo)
  #
GITHUB_PAGES_URL=https://rhul-cs-projects.github.io/CS1999-buggy-race-server


  # best with: no slash on server URL but leading+trailing slash on path
  #
BUGGY_RACE_SERVER_URL=http://rhul.buggyrace.net
SERVER_PROJECT_PAGE_PATH=/project/


  # URL to the course page for the project course
  #
MOODLE_URL=https://moodle.royalholloway.ac.uk/course/view.php?id=8381

  # registration only allowed with an auth code: (case insensitive)
  # if not set, registration is public, which probably isn't what you want
  #
REGISTRATION_AUTH_CODE=localauth


  # comma-separated list of users who have access to admin:
  # currently this is how we're acknowledging admin (not using the is_admin
  # setting in the user model: this was for pragmatic/monkey-patch reasons
  # and needs to be fixed!)
  # But for now, admin power is granted via env variable:
  #
ADMIN_USERNAMES=jasper


  # A special id used to identify the app asking for access to a github acc.
  # Read more here: https://docs.github.com/en/developers/apps/authorizing-oauth-apps#web-application-flow
GITHUB_CLIENT_ID=...

  # Sepcial secret used to authorize our application making requests for 
  # oauth access tokens
GITHUB_CLIENT_SECRET=...


# end-of-file
